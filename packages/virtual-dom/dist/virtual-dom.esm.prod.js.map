{"version":3,"file":"virtual-dom.esm.prod.js","sources":["../../utils/src/store/node.ts","../../utils/src/tools/dom.ts","../src/serialize.ts","../src/dom.ts","../src/deserialize.ts"],"sourcesContent":["class NodeStore {\n    private static nodeId = 1\n    private nodeMap: Map<number, Node>\n    private idMap: WeakMap<Node, number>\n\n    constructor() {\n        this.init()\n    }\n\n    private init() {\n        this.nodeMap = new Map()\n        this.idMap = new WeakMap()\n    }\n\n    public reset() {\n        this.nodeMap.clear()\n    }\n\n    public createNodeId = () => NodeStore.nodeId++\n\n    public getNode(id: number) {\n        return this.nodeMap.get(id) || null\n    }\n\n    public addNode(node: Node, id: number = this.createNodeId()) {\n        this.idMap.set(node, id)\n        this.nodeMap.set(id, node)\n        return id\n    }\n\n    public removeNode(id: number) {\n        this.nodeMap.delete(id)\n        this.idMap.delete(this.getNode(id) as Node)\n    }\n\n    public getNodeId(node: Node) {\n        return this.idMap.get(node)\n    }\n\n    public updateNode(id: number, node: Node) {\n        this.idMap.set(node, id)\n        this.nodeMap.set(id, node)\n    }\n}\n\nexport const nodeStore = new NodeStore()\n","import { VNode } from '@timecat/share'\n\nconst snapshot = () => window.G_REPLAY_DATA && window.G_REPLAY_DATA.snapshot.data\n\nconst href = () => snapshot().href\n\nexport function isCommentNode(node: Node) {\n    return node.nodeType === Node.COMMENT_NODE\n}\n\nexport function isElementNode(node: Node) {\n    return node.nodeType === Node.ELEMENT_NODE\n}\n\nexport function isTextNode(node: Node) {\n    return node.nodeType === Node.TEXT_NODE\n}\n\nexport function filteringScriptTag(str: string) {\n    const reg = /<\\/script>/g\n    return str.replace(reg, '<\\\\/script>')\n}\n\nexport function completeCssHref(str: string, parentVNode?: VNode) {\n    return str.replace(/(url\\(['\"]?((\\/{1,2}|\\.\\.?\\/)[^'\"]*?)['\"]?(?=\\)))/g, (string, b, url) => {\n        if (!url.startsWith('data')) {\n            const baseUrl = parentVNode?.attrs['css-url'] || href()\n            const newUrl = new URL(url, baseUrl)\n            return string.replace(url, newUrl.href)\n        }\n        return string\n    })\n}\n\nexport function completeAttrHref(str: string, node?: Element) {\n    if (str.startsWith('data')) {\n        return str\n    }\n\n    if (node) {\n        setTimeout(() => {\n            const doc = node.getRootNode() as Document\n            const context = doc.defaultView as Window\n\n            const { href, path } = context?.G_REPLAY_LOCATION || {}\n\n            if (path && href) {\n                const relationHref = new URL(path, href)\n                const attrs = node.getAttributeNames()\n                attrs\n                    .filter(key => ~['src', 'href'].indexOf(key))\n                    .forEach(key => {\n                        const newHref = new URL(str, relationHref).href\n                        if (node.getAttribute(key) !== newHref) {\n                            node.setAttribute(key, newHref)\n                        }\n                    })\n            }\n        })\n    }\n    return new URL(str, href()).href\n}\n\nexport function isHideComment(node: Node | null) {\n    if (!node) {\n        return false\n    }\n    return node.nodeType === Node.COMMENT_NODE && node.textContent === 'hidden'\n}\n\nexport function isExistingNode(node: Node) {\n    return node.ownerDocument && !!node.ownerDocument.contains(node)\n}\n\nexport async function getRawScriptContent(src: string) {\n    if (!src) {\n        return false\n    }\n    if (src.length > 500) {\n        return false\n    }\n\n    const fullSrc = completeAttrHref(src)\n\n    if (isValidUrl(fullSrc)) {\n        try {\n            return await getScript(fullSrc)\n        } catch (err) {\n            // handle cross error\n            return false\n        }\n    }\n\n    return false\n}\n\nfunction isValidUrl(url: string) {\n    try {\n        new URL(url)\n    } catch (_) {\n        return false\n    }\n    return true\n}\n\nexport async function getScript(src: string) {\n    return await fetch(src).then(async res => filteringScriptTag(await res.text()))\n}\n","import { VNode, VSNode } from '@timecat/share'\nimport { nodeStore, isElementNode } from '@timecat/utils'\n\nconst getVNodeByEl = (el: Element, isSVG?: boolean): VNode | VSNode => {\n    if (isElementNode(el)) {\n        return {\n            id: nodeStore.createNodeId(),\n            type: el.nodeType,\n            attrs: getAttr(el as HTMLElement & { checked: boolean }),\n            tag: el.tagName.toLocaleLowerCase(),\n            children: [] as VNode[],\n            extra: getExtra(el, isSVG)\n        }\n    } else {\n        return {\n            id: nodeStore.createNodeId(),\n            type: el.nodeType,\n            value: el.textContent as string\n        }\n    }\n}\n\nconst getAttr = (el: HTMLElement & { checked: boolean }) => {\n    const resAttr: { [key: string]: string } = {}\n    const { attributes } = el\n    if (attributes && attributes.length) {\n        return Object.values(attributes).reduce((ret: { [key: string]: string }, attr) => {\n            const [name, value] = extraAttr(attr)\n\n            if (name) {\n                ret[name] = value\n            }\n            return ret\n        }, resAttr)\n    }\n    return resAttr\n}\n\nfunction getExtra(node: Element, isSVG?: boolean) {\n    const { tagName } = node\n    const extra: VNode['extra'] = {}\n    const props: VNode['extra']['props'] = {}\n\n    if (isSVG || tagName.toLowerCase() === 'svg') {\n        extra.isSVG = true\n    }\n\n    if (tagName === 'INPUT') {\n        const { checked, value } = node as any\n        if (value !== undefined) {\n            props.value = value\n        }\n        if (checked !== undefined) {\n            props.checked = checked\n        }\n    }\n\n    // find the scrolled elements\n    const scrollLeft = node.scrollLeft\n    const scrollTop = node.scrollTop\n    if (scrollTop || scrollLeft) {\n        props.scroll = {\n            left: scrollLeft,\n            top: scrollTop\n        }\n    }\n\n    if (Object.keys(props).length) {\n        extra.props = props\n    }\n\n    return extra\n}\n\nconst extraAttr = (attr: Attr) => {\n    const { name, value } = attr\n    if (name === 'href' || name === 'src') {\n        if (value.startsWith('#/')) {\n            return []\n        }\n        return [name, value]\n    }\n    return [name, value]\n}\n\nexport const createFlatVNode = (el: Element, isSVG = false) => {\n    const vNode = getVNodeByEl(el, isSVG)\n    const { id } = vNode\n    nodeStore.addNode(el, id)\n    return vNode\n}\n\nexport const createElement = (el: Element, inheritSVG?: boolean): VNode | VSNode | null => {\n    const vNode = getVNodeByEl(el, inheritSVG)\n    const { id } = vNode\n    nodeStore.addNode(el, id)\n\n    if (vNode.type === Node.ELEMENT_NODE) {\n        const vn = vNode as VNode\n        inheritSVG = inheritSVG || vn.extra.isSVG\n        el.childNodes.forEach((node: Element) => {\n            const child = createElement(node, inheritSVG)\n            if (child) {\n                vn.children.push(child)\n            }\n        })\n    }\n\n    return vNode\n}\n\nexport const virtualDOM = {\n    createElement\n}\n","import { completeAttrHref, completeCssHref } from '@timecat/utils'\n\nexport function setAttribute(node: HTMLElement, name: string, value: string | boolean | null): void {\n    if (node.nodeType !== Node.ELEMENT_NODE) {\n        return\n    }\n    if (name === 'style') {\n        if (typeof value === 'string') {\n            node.style.cssText = completeCssHref(value)\n        } else if (value !== null && typeof value === 'object') {\n            for (const [k, v] of Object.entries(value)) {\n                if (k[0] === '-') {\n                    node.style.setProperty(k, v as any)\n                } else {\n                    node.style[k as any] = v as any\n                }\n            }\n        }\n        return\n    }\n\n    // for disabled js prefetch\n    if (value && typeof value === 'string' && /\\.js$/.test(value)) {\n        return\n    }\n\n    if (!/^[\\w\\-\\d]+$/.test(name)) {\n        return\n    }\n\n    if (/^on\\w+$/.test(name)) {\n        return\n    }\n\n    if (value === null) {\n        return node.removeAttribute(name)\n    }\n\n    value = String(value)\n\n    if (name === 'href') {\n        value = completeAttrHref(String(value), node)\n    }\n\n    if (name === 'background' || name === 'src') {\n        if (value.startsWith('data:')) {\n            // skip\n        } else {\n            value = completeAttrHref(String(value), node)\n        }\n    }\n\n    // The srcset attribute specifies the URL of the image to use in different situations\n    if (name === 'srcset') {\n        const srcArray = value.split(',')\n        value = srcArray.map(src => completeAttrHref(src.trim(), node)).toString()\n    }\n\n    if (value.startsWith('/')) {\n        value = completeAttrHref(value, node)\n    }\n\n    return node.setAttribute(name, value)\n}\n","import { setAttribute } from './dom'\nimport { nodeStore, isDev, isHideComment, completeCssHref } from '@timecat/utils'\nimport { VNode, VSNode } from '@timecat/share'\n\nexport function convertVNode(vNode: VNode | VSNode | null, parent?: VNode): Element | null {\n    if (vNode === null || vNode === undefined) {\n        return null\n    }\n    const vs = vNode as VSNode\n    if (vNode.type === Node.COMMENT_NODE) {\n        return createCommentNode(vs) as Element\n    }\n    if (vNode.type === Node.TEXT_NODE) {\n        if (parent && parent.tag === 'style') {\n            vs.value = completeCssHref(vs.value, parent)\n        }\n        return createText(vs) as Element\n    }\n    const vn = vNode as VNode\n    const output = createNode(vn)\n\n    if ((vn.children && vn.children.length) || (output.childNodes && output.childNodes.length)) {\n        travel(vn, output)\n    }\n\n    return output\n}\n\nfunction travel(vNode: VNode, node: Element): void {\n    const nodeChildren: Element[] = []\n    const vNodeChildren = vNode.children.slice()\n    vNodeChildren.forEach(vChild => {\n        let child = nodeChildren.pop() as Element | null\n        child = convertVNode(vChild, vNode)\n        if (child) {\n            if (isHideComment(node.lastChild)) {\n                setAttribute(child as HTMLElement, 'style', 'visibility: hidden')\n            }\n            node.appendChild(child)\n        }\n    })\n}\n\nfunction createProps(vNode: VNode, node: Element): void {\n    const { props } = vNode.extra\n    if (props) {\n        for (const [key, val] of Object.entries(props)) {\n            if (key === 'scroll') {\n                const { left, top } = val as { top: number; left: number }\n                // TODO\n                // when the inserted element onload?\n                setTimeout(() => {\n                    node.scrollTop = top\n                    node.scrollLeft = left\n                }, 1000)\n            } else {\n                ;(node as any)[key] = val\n            }\n        }\n    }\n}\n\nfunction createAttributes(vNode: VNode, node: Element): void {\n    const attrs = getAttributes(vNode)\n\n    for (const [name, val] of Object.entries(attrs)) {\n        setAttribute(node as HTMLElement, name, val)\n    }\n    if (vNode.tag === 'a') {\n        node.setAttribute('target', '_blank')\n    }\n}\n\nfunction getAttributes(vNode: VNode) {\n    const attrs = { ...vNode.attrs }\n    if (vNode.tag === 'iframe') {\n        attrs['disabled-src'] = attrs.src\n        delete attrs.src\n    }\n    return attrs\n}\n\nexport function createSpecialNode(vsNode: VSNode) {\n    const { type, value, id } = vsNode\n\n    let output: Node\n\n    switch (type) {\n        case Node.TEXT_NODE:\n            output = document.createTextNode(value)\n            break\n        case Node.COMMENT_NODE:\n            output = document.createComment(value)\n            break\n    }\n    nodeStore.updateNode(id, output!)\n    return output!\n}\n\nexport function createNode(vNode: VNode): Element {\n    const { id, extra } = vNode\n    const { isSVG } = extra\n    let output: Element\n    const tagName = transformTagName(vNode.tag)\n    if (isSVG) {\n        output = document.createElementNS('http://www.w3.org/2000/svg', tagName)\n    } else {\n        output = document.createElement(tagName)\n    }\n\n    if (isDev) {\n        setAttribute(output as HTMLElement, 'vid', id.toString())\n    }\n    createAttributes(vNode, output)\n    createProps(vNode, output)\n    nodeStore.updateNode(id, output)\n    return output\n}\n\nfunction transformTagName(tag: string) {\n    const tagMap: { [key: string]: string } = {\n        // script deactivated\n        script: 'noscript',\n\n        // SVG transform tagName\n        altglyph: 'altGlyph',\n        altglyphdef: 'altGlyphDef',\n        altglyphitem: 'altGlyphItem',\n        animatecolor: 'animateColor',\n        animatemotion: 'animateMotion',\n        animatetransform: 'animateTransform',\n        clippath: 'clipPath',\n        feblend: 'feBlend',\n        fecolormatrix: 'feColorMatrix',\n        fecomponenttransfer: 'feComponentTransfer',\n        fecomposite: 'feComposite',\n        feconvolvematrix: 'feConvolveMatrix',\n        fediffuselighting: 'feDiffuseLighting',\n        fedisplacementmap: 'feDisplacementMap',\n        fedistantlight: 'feDistantLight',\n        feflood: 'feFlood',\n        fefunca: 'feFuncA',\n        fefuncb: 'feFuncB',\n        fefuncg: 'feFuncG',\n        fefuncr: 'feFuncR',\n        fegaussianblur: 'feGaussianBlur',\n        feimage: 'feImage',\n        femerge: 'feMerge',\n        femergenode: 'feMergeNode',\n        femorphology: 'feMorphology',\n        feoffset: 'feOffset',\n        fepointLight: 'fePointLight',\n        fespecularlighting: 'feSpecularLighting',\n        fespotlight: 'feSpotLight',\n        fetile: 'feTile',\n        feturbulence: 'feTurbulence',\n        foreignobject: 'foreignObject',\n        lineargradient: 'linearGradient',\n        radialgradient: 'radialGradient',\n        textpath: 'textPath'\n    }\n    const tagName = tagMap[tag] || tag\n    return tagName\n}\n\nfunction createText(vs: VSNode) {\n    const { value, id } = vs\n    const output: Node = document.createTextNode(value)\n    nodeStore.updateNode(id, output)\n    return output\n}\n\nfunction createCommentNode(vs: VSNode) {\n    const { value, id } = vs\n    const output: Node = document.createComment(value)\n    nodeStore.updateNode(id, output)\n    return output\n}\n"],"names":["NodeStore","[object Object]","this","nodeId","init","nodeMap","Map","idMap","WeakMap","clear","id","get","node","createNodeId","set","delete","getNode","nodeStore","href","window","G_REPLAY_DATA","snapshot","data","completeCssHref","str","parentVNode","replace","string","b","url","startsWith","baseUrl","attrs","newUrl","URL","completeAttrHref","setTimeout","context","getRootNode","defaultView","path","G_REPLAY_LOCATION","relationHref","getAttributeNames","filter","key","indexOf","forEach","newHref","getAttribute","setAttribute","getVNodeByEl","el","isSVG","nodeType","Node","ELEMENT_NODE","type","getAttr","tag","tagName","toLocaleLowerCase","children","extra","getExtra","value","textContent","resAttr","attributes","length","Object","values","reduce","ret","attr","name","extraAttr","props","toLowerCase","checked","undefined","scrollLeft","scrollTop","scroll","left","top","keys","createFlatVNode","vNode","addNode","createElement","inheritSVG","vn","childNodes","child","push","virtualDOM","test","removeAttribute","String","srcArray","split","map","src","trim","toString","style","cssText","k","v","entries","setProperty","convertVNode","parent","vs","COMMENT_NODE","output","document","createComment","updateNode","createCommentNode","TEXT_NODE","createTextNode","createText","createNode","nodeChildren","slice","vChild","pop","isHideComment","lastChild","appendChild","travel","createAttributes","getAttributes","val","createSpecialNode","vsNode","script","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","clippath","feblend","fecolormatrix","fecomponenttransfer","fecomposite","feconvolvematrix","fediffuselighting","fedisplacementmap","fedistantlight","feflood","fefunca","fefuncb","fefuncg","fefuncr","fegaussianblur","feimage","femerge","femergenode","femorphology","feoffset","fepointLight","fespecularlighting","fespotlight","fetile","feturbulence","foreignobject","lineargradient","radialgradient","textpath","createElementNS","createProps"],"mappings":"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"}